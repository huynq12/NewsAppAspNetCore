@using NewsApp.ViewModels;

@model PostDto

@{
    List<Comment> listcomment = ViewBag.ListComments;
    List<Rating> listratings = ViewBag.ListRatings;


}

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="form-label">Category</label>
                @Html.ListBoxFor(model => model.CategoryIds,
                new MultiSelectList(Model.SelectListCats,"Value","Text"),
                new {@class="form-control",multiple="multiple",id="Categories_dropdown"})
            </div>
        </form>
    </div>
</div>

<hr />
<div class="mt-2">
    <h5 class="mb-4">Comments</h5>
    <form class="row g-3" id="ratingForm">
        <input type="hidden" id="postid" value="@Model.Id" />
        <input type="hidden" id="userid" value="@ViewBag.UserId" />
        <input type="hidden" id="rateid" value="@ViewBag.RateId"

        <!-- Rating -->
        <div class="col-12">
            <select id="rating" class="form-select  js-choice">
                <option value="5" selected="">★★★★★ (5/5)</option>
                <option value="4">★★★★☆ (4/5)</option>
                <option value="3">★★★☆☆ (3/5)</option>
                <option value="2">★★☆☆☆ (2/5)</option>
                <option value="1">★☆☆☆☆ (1/5)</option>
            </select>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary mb-0">Review</button>

        </div>
    </form>
    <form class="row g-3 mt-4" id="commentForm">
        <input type="hidden" id="postid" value="@Model.Id" />
        <input type="hidden" id="userid" value="@ViewBag.UserId" />
        <!-- Rating -->
        <!-- Message -->
        <div class="col-12">
            <textarea class="form-control" id="commentContent" placeholder="Write your comment" rows="3"></textarea>
        </div>
        <!-- Button -->
        <div class="col-12">
            <button type="submit" class="btn btn-primary mb-0">Comment</button>

        </div>
    </form>
</div>


@*reivews*@
<div class="col-12 mt-3" id="ratingList">
    @foreach (var item in listratings)
    {
        <div class="card mt-1">
            <div class="card-body">
                <h5 class="card-title">@item.User.FullName</h5>
                <p class="card-text">
                    @for (int i = 1; i <= item.Rate; i++)
                    {
                        <span>★</span>

                    }
                </p>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <div class="rating">
                        <input type="hidden" id="ratingid" value="@item.Id">
                        <button onclick="deleteRating(@item.Id)" class="btn btn-danger">Remove</button>
                    </div>
                }

            </div>
        </div>
    }
</div>
<div class="col-12" id="commentList">
    @foreach (var item in listcomment)
    {
        <div class="card mt-1">
            <div class="card-body">
                <h5 class="card-title">@item.User.FullName</h5>
                @*<h6 class="card-subtitle mb-2 text-body-secondary">@item.Rate</h6>*@
                <p class="card-text">@item.CommentMsg</p>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <div class="comment">
                        <input type="hidden" id="commentid" value="@item.Id">
                        <button onclick="deleteComment(@item.Id)" class="btn btn-danger">Remove</button>
                    </div>
                }

            </div>
        </div>
    }
</div>


<div class="mt-4">
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <a class="btn btn-warning" onclick="showInPopup('@Url.Action("Edit","Post",new{id=Model.Id},Context.Request.Scheme)','Update Post')">Edit</a>

    }
    <a asp-action="Index" class="btn btn-danger">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#Categories_dropdown').multiselect();
        });
    </script>
    <script>
        $(document).ready(function () {

            $("#commentForm").submit(function (e) {
                e.preventDefault();

                var postid = $("#postid").val();
                var content = $("#commentContent").val();

                $.ajax({
                    url: "/Post/AddComment",
                    type: "POST",
                    data: {
                        postid: postid,
                        commentmsg: content,
                        // rate : rating,
                    },
                    success: function (result) {

                        location.reload();

                        $("#commentContent").val("");
                    }
                });
            });
        });
    </script>
    <script>
        function deleteComment(commentid) {
            // Gửi Ajax request
            $.ajax({
                url: '/Post/RemoveComment',
                type: 'POST',
                data: { commentid: commentid },
                success: function (result) {
                    //console.log("Comment deleted successfully.");
                    location.reload(); // Reload trang sau khi xoá thành công
                },
                error: function () {

                    console.error("An error occurred while deleting the comment.");
                }
            });
        }
    </script>
    <script>
        $(document).ready(function () {

            $("#ratingForm").submit(function (e) {
                e.preventDefault();

                var postid = $("#postid").val();
                var rating = $("#rating").val();
                //var rateid = $("#rateid").val();

                $.ajax({
                    url: "/Post/AddOrUpdateRating",
                    type: "POST",
                    data: {
                        postid: postid,
                        rate: rating,
                        //rateid : rateid
                    },
                    success: function (result) {

                        location.reload();


                    }
                });
            });
        });
    </script>
    <script>
        function deleteRating(ratingid) {

            $.ajax({
                url: '/Post/RemoveRating',
                type: 'POST',
                data: { ratingid: ratingid },
                success: function (result) {

                    console.log("Rating deleted successfully.");
                    location.reload(); // Reload trang sau khi xoá thành công
                },
                error: function () {

                    console.error("An error occurred while deleting the rating.");
                }
            });
        }
    </script>
}
