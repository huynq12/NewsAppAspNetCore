@using NewsApp.ViewModels;
@using NewsApp.ViewModels.Seedwork;
@model PagedList<Post>

@{
    ViewData["Title"] = "Index";
    var filter = ViewBag.Filter;
    var catIdFilt = ViewBag.CategoryId;
}

<h1 class="text-center ">Post</h1>

<form asp-action="Index">
    @Html.DropDownList("CategoryIds",new SelectList(filter.SelectListCats,"Value","Text"),"--Select--")
    <button class="btn btn-primary" type="submit">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            
            <th>
                Description
            </th>
            <th>
                CreatedAt
            </th>
            <th>
                @if(User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <a class="btn btn-success text-white" onclick="showInPopup('@Url.Action("Create","Post",null,Context.Request.Scheme)','New Post')">New Post</a>
                }
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                    <a class="btn btn-info text-white" asp-action="Details" asp-route-id="@item.Id">View</a> 

                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <a class="btn btn-warning" onclick="showInPopup('@Url.Action("Edit","Post",new{id=item.Id},Context.Request.Scheme)','Update Post')">Edit</a>
                        
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                    }
            </td>
        </tr>
}
    </tbody>
</table>


<div class="container">
    @if (Model.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pg="1" asp-route-CategoryIds="@catIdFilt">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pg="@(Model.CurrentPage-1)" asp-route-CategoryIds="@catIdFilt">Previous</a>
                </li>
            }
            @for (var pge = Model.StartPage; pge <= Model.EndPage; pge++)
            {
                <li class="page-item" @(pge == Model.CurrentPage ? "active" : "")>
                    <a class="page-link" asp-action="Index" asp-route-pg="@pge" asp-route-CategoryIds="@catIdFilt">@pge</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pg="@(Model.CurrentPage+1)" asp-route-CategoryIds="@catIdFilt">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pg="@(Model.TotalPages)" asp-route-CategoryIds="@catIdFilt">Last</a>
                </li>
            }
        </ul>
    }
</div>
